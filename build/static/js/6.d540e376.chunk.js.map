{"version":3,"sources":["pages/SingleRecipe/SingleRecipe.js"],"names":["SingleRecipe","id","useParams","useState","loading","setLoading","recipes","setRecipes","React","useEffect","a","fetch","response","json","data","meals","name","strMeal","image","strMealThumb","category","strCategory","strIngredient1","strIngredient2","strIngredient3","strIngredient4","strIngredient5","strIngredient6","strIngredient7","strIngredient8","strIngredient9","strIngredient10","strIngredient11","strIngredient12","strIngredient13","strIngredient14","strIngredient15","instructions","strInstructions","ingredients","console","log","getRecipe","className","src","alt","map","item","index"],"mappings":"8PAKe,SAASA,IACtB,IAAQC,EAAOC,cAAPD,GAER,EAA8BE,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAoEA,GAlEAC,IAAMC,WAAU,WAAM,4CAEpB,sEAAAC,EAAA,+EAE2BC,MAAM,wDAAD,OAC8BV,IAH9D,cAEUW,EAFV,gBAKuBA,EAASC,OALhC,QAKUC,EALV,QAOaC,OAAQ,EAqBXD,EAAKC,MAAM,GAnBJC,EAFG,EAEZC,QACcC,EAHF,EAGZC,aACaC,EAJD,EAIZC,YACAC,EALY,EAKZA,eACAC,EANY,EAMZA,eACAC,EAPY,EAOZA,eACAC,EARY,EAQZA,eACAC,EATY,EASZA,eACAC,EAVY,EAUZA,eACAC,EAXY,EAWZA,eACAC,EAZY,EAYZA,eACAC,EAbY,EAaZA,eACAC,EAdY,EAcZA,gBACAC,EAfY,EAeZA,gBACAC,EAhBY,EAgBZA,gBACAC,EAjBY,EAiBZA,gBACAC,EAlBY,EAkBZA,gBACAC,EAnBY,EAmBZA,gBACiBC,EApBL,EAoBZC,gBA0BF/B,EAPkB,CAChBS,OACAE,QACAE,WACAmB,YArBkB,CAClBjB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAOAC,kBAIF9B,EAAW,MAvDjB,kDA0DIiC,QAAQC,IAAR,MA1DJ,QA4DEpC,GAAW,GA5Db,2DAFoB,sBACpBA,GAAW,GADS,mCAgEpBqC,KACC,CAACzC,IACAG,EACF,OAAO,cAAC,IAAD,IAET,GAAKE,EAEE,CACL,IAAQU,EAAqDV,EAArDU,KAAME,EAA+CZ,EAA/CY,MAAOE,EAAwCd,EAAxCc,SAAUmB,EAA8BjC,EAA9BiC,YAAaF,EAAiB/B,EAAjB+B,aAE5C,OACE,sBAAKM,UAAU,mBAAf,UACE,qBAAKA,UAAU,aAAf,SACE,qBAAKC,IAAK1B,EAAO2B,IAAK7B,MAGxB,sBAAK2B,UAAU,gBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,6BAAK3B,MAEP,sBAAK2B,UAAU,OAAf,UACE,6BACE,sBAAMA,UAAU,aAAhB,0BAEF,4BAAIvB,IACJ,uBACA,+CACA,8BACGmB,GACCA,EAAYO,KAAI,SAACC,EAAMC,GACrB,OACE,8BACE,4BAAID,KADIC,QAMlB,uBACA,6BACE,sBAAML,UAAU,aAAhB,8BAEF,4BAAIN,aAnCZ,OAAO,oBAAIM,UAAU,gBAAd","file":"static/js/6.d540e376.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\nimport \"./SingleRecipe.css\";\r\n\r\nexport default function SingleRecipe() {\r\n  const { id } = useParams();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [recipes, setRecipes] = useState([]);\r\n\r\n  React.useEffect(() => {\r\n    setLoading(true);\r\n    async function getRecipe() {\r\n      try {\r\n        const response = await fetch(\r\n          `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`\r\n        );\r\n        const data = await response.json();\r\n\r\n        if (data.meals) {\r\n          const {\r\n            strMeal: name,\r\n            strMealThumb: image,\r\n            strCategory: category,\r\n            strIngredient1,\r\n            strIngredient2,\r\n            strIngredient3,\r\n            strIngredient4,\r\n            strIngredient5,\r\n            strIngredient6,\r\n            strIngredient7,\r\n            strIngredient8,\r\n            strIngredient9,\r\n            strIngredient10,\r\n            strIngredient11,\r\n            strIngredient12,\r\n            strIngredient13,\r\n            strIngredient14,\r\n            strIngredient15,\r\n            strInstructions: instructions,\r\n          } = data.meals[0];\r\n          const ingredients = [\r\n            strIngredient1,\r\n            strIngredient2,\r\n            strIngredient3,\r\n            strIngredient4,\r\n            strIngredient5,\r\n            strIngredient6,\r\n            strIngredient7,\r\n            strIngredient8,\r\n            strIngredient9,\r\n            strIngredient10,\r\n            strIngredient11,\r\n            strIngredient12,\r\n            strIngredient13,\r\n            strIngredient14,\r\n            strIngredient15,\r\n          ];\r\n          const newRecipe = {\r\n            name,\r\n            image,\r\n            category,\r\n            ingredients,\r\n            instructions,\r\n          };\r\n          setRecipes(newRecipe);\r\n        } else {\r\n          setRecipes(null);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      setLoading(false);\r\n    }\r\n    getRecipe();\r\n  }, [id]);\r\n  if (loading) {\r\n    return <Spinner />;\r\n  }\r\n  if (!recipes) {\r\n    return <h2 className=\"section-title\">No recipe to display.</h2>;\r\n  } else {\r\n    const { name, image, category, ingredients, instructions } = recipes;\r\n\r\n    return (\r\n      <div className=\"recipe_container\">\r\n        <div className=\"recipe_pic\">\r\n          <img src={image} alt={name} />\r\n        </div>\r\n\r\n        <div className=\"single_recipe\">\r\n          <div className=\"heading\">\r\n            <h1>{name}</h1>\r\n          </div>\r\n          <div className=\"text\">\r\n            <h4>\r\n              <span className=\"drink-data\">Category :</span>\r\n            </h4>\r\n            <p>{category}</p>\r\n            <br></br>\r\n            <h4>Ingredients :</h4>\r\n            <div>\r\n              {ingredients &&\r\n                ingredients.map((item, index) => {\r\n                  return (\r\n                    <div key={index}>\r\n                      <p>{item}</p>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </div>\r\n            <br></br>\r\n            <h4>\r\n              <span className=\"drink-data\">Instructions :</span>\r\n            </h4>\r\n            <p>{instructions}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}