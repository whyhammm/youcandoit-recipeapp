{"version":3,"sources":["context.js","components/Spinner/Spinner.js","utils/firebase.js","utils/Auth.js","components/Navbar/Navbar.js","App.js","index.js"],"names":["AppContext","React","createContext","AppProvider","children","useState","loading","setLoading","searchTerm","setSearchTerm","recipes","setRecipes","list","setList","filterRecipes","filter","todo","name","toLowerCase","includes","fetchRecipes","useCallback","a","fetch","response","json","data","meals","newRecipes","map","item","id","idMeal","strMeal","image","strMealThumb","console","log","useEffect","Provider","value","useGlobalContext","useContext","Spinner","className","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","Auth","provider","GoogleAuthProvider","signInWithPopup","then","result","Navbar","history","useHistory","firstName","setFirstName","googleSignIn","message","onAuthStateChanged","user","displayName","push","to","onClick","signOut","Homepage","lazy","Errorpage","Recipelist","Recipedetails","App","fallback","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.87d4b367.chunk.js","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useCallback } from \"react\";\r\n\r\nconst url = \"https://www.themealdb.com/api/json/v1/1/search.php?s=\";\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"pizza\");\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [list, setList] = useState([]);\r\n\r\n  var filterRecipes = recipes.filter((todo) => {\r\n    return todo.name.toLowerCase().includes(searchTerm.toLowerCase());\r\n  });\r\n\r\n  const fetchRecipes = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(`${url}${searchTerm}`);\r\n\r\n      const data = await response.json();\r\n\r\n      const { meals } = data;\r\n      if (meals) {\r\n        const newRecipes = meals.map((item) => {\r\n          const { idMeal, strMeal, strMealThumb } = item;\r\n\r\n          return {\r\n            id: idMeal,\r\n            name: strMeal,\r\n            image: strMealThumb,\r\n          };\r\n        });\r\n        setRecipes(newRecipes);\r\n      } else {\r\n        setRecipes([]);\r\n      }\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setLoading(false);\r\n    }\r\n  }, [searchTerm]);\r\n\r\n  useEffect(() => {\r\n    fetchRecipes();\r\n  }, [searchTerm, fetchRecipes]);\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        loading,\r\n        recipes,\r\n        searchTerm,\r\n        setSearchTerm,\r\n        filterRecipes,\r\n        list,\r\n        setList,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n\r\nexport { AppContext, AppProvider };\r\n","import React from \"react\";\r\nimport \"./Spinner.css\";\r\n\r\nconst Spinner = () => (\r\n  <div className=\"spinner-overlay\">\r\n    <div className=\"spinner-container\"></div>\r\n  </div>\r\n);\r\n\r\nexport default Spinner;\r\n","import firebase from \"firebase\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTHDOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGEBUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const auth = firebase.auth;\r\n\r\nexport default firebase;\r\n","import { auth } from \"./firebase\";\r\n\r\nexport default function Auth() {\r\n  const provider = new auth.GoogleAuthProvider();\r\n\r\n  return auth()\r\n    .signInWithPopup(provider)\r\n    .then((result) => {\r\n      //handle if required\r\n    });\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { auth } from \"../../utils/firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Auth from \"../../utils/Auth\";\r\nimport \"./Navbar.css\";\r\n\r\nconst Navbar = () => {\r\n  const history = useHistory();\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const googleSignIn = async () => {\r\n    try {\r\n      await Auth();\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    auth().onAuthStateChanged(function (user) {\r\n      if (user) {\r\n        setFirstName(user.displayName);\r\n\r\n        history.push(\"/recipe\");\r\n      } else console.log(\"No user is logged in.\");\r\n    });\r\n  }, [history, firstName]);\r\n\r\n  return (\r\n    <header>\r\n      <nav id=\"nav\">\r\n        <div className=\"container\">\r\n          <h1 className=\"logo\">\r\n            <i className=\"fa fa-cutlery\"></i> foodclub\r\n          </h1>\r\n\r\n          <ul className=\"links\">\r\n            <li>\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/recipe\">Recipes</Link>\r\n            </li>\r\n          </ul>\r\n\r\n          {firstName ? (\r\n            <Link\r\n              to=\"/\"\r\n              onClick={() => {\r\n                auth().signOut();\r\n                setFirstName(\"\");\r\n              }}\r\n            >\r\n              {\" \"}\r\n              <button className=\"btn\">Sign Out</button>\r\n            </Link>\r\n          ) : (\r\n            <button className=\"btn\" onClick={googleSignIn}>\r\n              Sign Up\r\n            </button>\r\n          )}\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\nexport default Navbar;\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport Spinner from \"./components/Spinner/Spinner\";\r\nconst Homepage = lazy(() => import(\"./pages/Hero/Hero\"));\r\nconst Errorpage = lazy(() => import(\"./pages/Error/Error\"));\r\nconst Recipelist = lazy(() => import(\"./pages/Recipe/RecipeList\"));\r\nconst Recipedetails = lazy(() => import(\"./pages/SingleRecipe/SingleRecipe\"));\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Navbar />\r\n      <Suspense fallback={<Spinner />}>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Homepage} />\r\n          <Route exact path=\"/recipe\" component={Recipelist} />\r\n          <Route exact path=\"/recipe/:id\" component={Recipedetails} />\r\n          <Route exact path=\"*\" component={Errorpage} />\r\n        </Switch>\r\n      </Suspense>\r\n    </BrowserRouter>\r\n  );\r\n};\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { AppProvider } from \"./context\";\r\n\r\nReactDOM.render(\r\n  <AppProvider>\r\n    <App />\r\n    </AppProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}